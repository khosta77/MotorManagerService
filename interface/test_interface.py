#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import requests
import json
import time

BASE_URL = "http://127.0.0.1:8000"

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"""
    try:
        response = requests.get(BASE_URL)
        if response.status_code == 200:
            print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É: {e}")
        return False

def test_version():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ MCU"""
    try:
        response = requests.post(f"{BASE_URL}/version")
        data = response.json()
        print(f"üìã –í–µ—Ä—Å–∏—è MCU: {data}")
        return data['status'] == 'success'
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏: {e}")
        return False

def test_list_devices():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤"""
    try:
        response = requests.post(f"{BASE_URL}/list_devices")
        data = response.json()
        print(f"üìã –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {data}")
        return data['status'] == 'success'
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {e}")
        return False

def test_motor_movement():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –º–æ—Ç–æ—Ä–æ–≤"""
    try:
        # –¢–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ X-–æ—Å–∏ (–∫–Ω–æ–ø–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ)
        response = requests.post(f"{BASE_URL}/button_click", 
                               json={"value": 100, "row": 2, "col": 2})
        data = response.json()
        print(f"üéÆ –î–≤–∏–∂–µ–Ω–∏–µ –º–æ—Ç–æ—Ä–æ–≤: {data}")
        return data['status'] == 'success'
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º–æ—Ç–æ—Ä–æ–≤: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ MotorControlService")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    if not test_connection():
        print("‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
        return
    
    print("\nüì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —Å–µ—Ä–≤–µ—Ä–∞:")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
    print("\n1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ MCU:")
    test_version()
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    print("\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤:")
    test_list_devices()
    
    # –¢–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è –º–æ—Ç–æ—Ä–æ–≤
    print("\n3. –¢–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è –º–æ—Ç–æ—Ä–æ–≤:")
    test_motor_movement()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
